// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id              Int               @id @default(autoincrement())
  nome            String
  email           String            @unique
  senha           String
  nascimento      DateTime
  cep             String?
  EncontroUsuario EncontroUsuario[]
  // UsuarioEquipe   UsuarioEquipe[]
  // Campeonato      Campeonato[]
  Amigo           Lista_amigos[]    @relation("amigo")
  Lista_amigos    Lista_amigos[]    @relation("dono")
}

model Lista_amigos {
  id        Int     @id @default(autoincrement())
  idAmigo   Int
  idDono    Int
  amigo     Usuario @relation("amigo", fields: [idAmigo], references: [id])
  dono      Usuario @relation("dono", fields: [idDono], references: [id])
}

//Encontro normal, sem premiação
model Encontro {
  id              Int               @id @default(autoincrement())
  descricao       String
  data            DateTime
  titulo          String
  id_local        Int
  local           Local             @relation(fields: [id_local], references: [id])
  EncontroUsuario EncontroUsuario[]
}

model Local {
  id                 Int                  @id @default(autoincrement())
  nome               String
  capacidade         Int
  cep                String
  Encontro           Encontro[]
  // Partida_campeonato Partida_campeonato[]
}

model EncontroUsuario {
  id          Int      @id @default(autoincrement())
  id_encontro Int
  id_usuario  Int
  usuario     Usuario  @relation(fields: [id_usuario], references: [id])
  encontro    Encontro @relation(fields: [id_encontro], references: [id])
}

// model Equipe {
//   id                Int                 @id @default(autoincrement())
//   nome              String
//   UsuarioEquipe     UsuarioEquipe[]
//   EquipePartidaCamp EquipePartidaCamp[]
// }

// model UsuarioEquipe {
//   id         Int     @id @default(autoincrement())
//   id_usuario Int
//   id_equipe  Int
//   usuario    Usuario @relation(fields: [id_usuario], references: [id])
//   equipe     Equipe  @relation(fields: [id_equipe], references: [id])
// }

// model Campeonato {
//   id                 Int                  @id @default(autoincrement())
//   esporte            String
//   premio             Float
//   valor_entrada      Float
//   descricao          String
//   id_criador         Int
//   usuario            Usuario              @relation(fields: [id_criador], references: [id])
//   Partida_campeonato Partida_campeonato[]
// }

// model EquipePartidaCamp {
//   id             Int                @id @default(autoincrement())
//   id_equipe      Int
//   id_partidaCamp Int
//   equipe         Equipe             @relation(fields: [id_equipe], references: [id])
//   partidaCamp    Partida_campeonato @relation(fields: [id_partidaCamp], references: [id])
// }

// model Partida_campeonato {
//   id                Int                 @id @default(autoincrement())
//   pontuacao         Int
//   id_local          Int
//   id_camp           Int
//   local             Local               @relation(fields: [id_local], references: [id])
//   campeonato        Campeonato          @relation(fields: [id_camp], references: [id])
//   EquipePartidaCamp EquipePartidaCamp[]
//   Local             Local?              @relation(fields: [localId], references: [id])
//   localId           Int?
// }
